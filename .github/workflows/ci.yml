name: "ITSM CI"

on:
  # Runs test suite when a new commit is pushed on "master" and "*/bugfixes" branches
  # and when a new tag is created
  push:
    branches:
      - '**'
    tags:
       - '*'

jobs:
  lint:
    # Do not run scheduled lint on tier repositories
    if: github.repository == 'itsmng/itsm-ng' || github.event_name != 'schedule'
    name: "Lint on PHP ${{ matrix.php-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
         # - {php-version: "7.2"} # Lint on lower PHP version to detected too early usage of new syntaxes
          - {php-version: "8.0"} # Lint on higher PHP version to detected deprecated elements usage
    env:
      COMPOSE_FILE: ".github/actions/docker-compose-app.yml"
      APPLICATION_ROOT: "${{ github.workspace }}"
      PHP_IMAGE: "githubactions-php:${{ matrix.php-version }}"
      UPDATE_FILES_ACL: true
    steps:
      - name: "Clean workspace"
        run: |
          echo "APP_CONTAINER_HOME=${{ runner.temp }}/app_home" >> $GITHUB_ENV
          rm -rf "${{ env.APPLICATION_ROOT }}/*"
          rm -rf "${{ env.APP_CONTAINER_HOME }}/*"
      - name: "Checkout"
        uses: "actions/checkout@v2"
      - name: "Restore dependencies cache"
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.APP_CONTAINER_HOME }}/.composer/cache/
            ${{ env.APP_CONTAINER_HOME }}/.npm/_cacache/
          key: "app_home_deps-${{ matrix.php-version }}-${{ hashFiles('composer.lock', 'package-lock.json') }}"
          restore-keys: |
            app_home_deps-${{ matrix.php-version }}-
            app_home_deps-
      - name: "Restore lint cache"
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.APP_CONTAINER_HOME }}/phpcs.cache
          key: "app_home_lint-${{ matrix.php-version }}-${{ github.base_ref || github.ref }}"
          restore-keys: |
            app_home_lint-${{ matrix.php-version }}
            app_home_lint-
      - name: "Initialize containers"
        run: |
          .github/actions/init_containers-start.sh
      - name: "Show versions"
        run: |
          .github/actions/init_show-versions.sh
      - name: "Install dependencies"
        run: |
          docker-compose exec -T app .github/actions/init_build.sh
      #- name: "PHP lint"
      #  run: |
      #    docker-compose exec -T app .github/actions/lint_php-lint.sh
      #- name: "JS lint"
      #  run: |
      #    docker-compose exec -T app .github/actions/lint_js-lint.sh
      #- name: "Misc lint"
      #  run: |
      #    docker-compose exec -T app .github/actions/lint_misc-lint.sh
      - name: "Cleanup containers"
        if: always()
        run: |
          .github/actions/teardown_containers-cleanup.sh
