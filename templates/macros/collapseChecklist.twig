{% macro collapseChecklist(data, previous_padding = 0) %}
	<ul class="ps-{{previous_padding}}">
		{% for title, content in data %}
			<li class="d-flex flex-column justify-content-start">
				<div class="d-flex align-items-center input-group">
					{% if content.content %}
					<button type="button" class="btn btn-link dropdown-checkbox-toggle" data-bs-toggle="collapse" href="#list-for-{{title|slug}}" aria-expanded="false">
						<i class="fas fa-caret-right"></i>
					</button>
					{% endif %}
					{% if content.value %}<input type="checkbox" id="{{title}}_{{content.value}}" name="{{title}}_{{content.value}}" value="{{content.value}}" onchange="checkChildren(this);checkParents(this)"/>{% endif %}
					<label for="{{title}}_{{content.value}}" class="ms-3">{{title}}</label>
				</div>
            	{% if content.content %}
                    <div class="collapse" id="list-for-{{title|slug}}">
                        {{_self.collapseChecklist(content.content, previous_padding + 2)}}
                    </div>
                {% endif %}
			</li>
		{% endfor %}
	</ul>
	<script>
	// check all childs recursively
	function checkChildren(element) {
		var children = element.parentElement.parentElement.getElementsByClassName("collapse");
		for (var i = 0; i < children.length; i++) {
			var child = children[i];
			var inputs = child.getElementsByTagName("input");
			for (var j = 0; j < inputs.length; j++) {
				var input = inputs[j];
				input.checked = element.checked;
			}
		}
	}

	// check parents recursively like a lineage
	function checkParents(element) {
		var parent = element.parentElement.parentElement.parentElement.parentElement;
		const elementIndex = Array.prototype.indexOf.call(parent.children, element.parentElement.parentElement.parentElement);
		var parentInput = parent.parentElement.parentElement.getElementsByTagName("input")[elementIndex];
		if (parentInput && parentInput != element) {
			parentInput.checked = true;
			checkParents(parentInput);
		} else if (parentInput == element) {
			checkParents(parentInput);
		}
	}
	</script>
{% endmacro %}
