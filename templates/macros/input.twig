{% macro multiSelect(attributes, root_doc) %}
<div {% if attributes.id %} id="{{attributes.id}}" {% endif %} class="w-100">
  <input type="hidden" name="{{attributes.name|default('')}}" value="[]">
  <div class="input-group m-0">
    <select class="form-select" id="ObjectSelector_{{rand}}">
      {% for value, name in attributes.options %}
        <option value="{{value}}">{{name|raw}}
      {% endfor %}
    </select>
    <button class="btn btn-sm btn-outline-success" type="button" onClick="addObject{{rand}}()"><i class="fas fa-plus"></i></button>
  </div>
  <table id="ObjectTable_{{rand}}" class="w-100 fs-6 table table-sm table-hover align-middle text-center">
    <tbody>
      {% for object in attributes.values %}
          <tr data-id="{{object.id}}" data-type="{{object.type}}">
            <td>
              <i class="{{ object.icon|raw }}"></i>
            </td>
            <td> {{object.name|raw}} </td>
            <td class="d-flex flex-row-reverse">
              <button type="button" class="btn btn-sm btn-outline-danger" onClick="removeObject{{rand}}('{{object.type}}', '{{object.id}}')">
                <i class="fas fa-times"></i>
              </button>
            </td>
          </tr>
      {% endfor %}
    </tbody>
  </table>
</div>
<script>

function removeObject{{rand}}(type,id) {
  const JsonSelection = $('input[name="{{attributes.name|default('')}}"]').val();
  const selection = JSON.parse(JsonSelection);
  const newSelection = selection.filter((item) => item.type != type || item.id != id);
  $('input[name="{{attributes.name|default('')}}"]').val(JSON.stringify(newSelection));
  // remove the row from the table
  $(`#ObjectTable_{{rand}} tr[data-id='${id}'][data-type='${type}']`).remove();
}

function addObject{{rand}}() {
  const icons = { user: 'fas fa-user', group: 'fas fa-users', supplier: 'fas fa-dolly' }
  const objectType = $("#ObjectTypeSelector_{{rand}}").val();
  const objectName = $("#ObjectSelector_{{rand}}").val();
  const JsonSelection = $('input[name="{{attributes.name|default('')}}"]').val();
  const selection = JSON.parse(JsonSelection);
  const newSelection = [...selection, {type: objectType, id: objectName}];
  $('input[name="{{attributes.name|default('')}}"]').val(JSON.stringify(newSelection));
  // add the row to the table
  const objectNameText = $("#ObjectSelector_{{rand}} option:selected").text();
  const newRow = `<tr data-id="${objectName}" data-type="${objectType}">
    <td>
      <i class="${icons[objectType]}"></i>
    </td>
    <td> ${objectNameText} </td>
    <td class="d-flex flex-row-reverse">
      <button type="button" class="btn btn-sm btn-outline-danger" onClick="removeObject{{rand}}('${objectType}', '${objectName}')">
        <i class="fas fa-times"></i>
      </button>
    </td>`;
  $(`#ObjectTable_{{rand}} tbody`).append(newRow);
}

$(document).ready(() => {
  // add all already present actors
  let letJsonSelection = '';
  let selection = '';
  let newSelection = '';
  {% for actor in attributes.values %}
    letJsonSelection = $('input[name="{{attributes.name|default('')}}"]').val();
    selection = JSON.parse(letJsonSelection);
    newSelection = [...selection, {type: '{{actor.type}}', id: '{{actor.id}}'}];
    $('input[name="{{attributes.name|default('')}}"]').val(JSON.stringify(newSelection));
  {% endfor %}
})
</script>
{% endmacro %}

{% macro actorSelect(attributes, root_doc) %}
{% set rand=random() %}
<div {% if attributes.id %} id="{{attributes.id}}" {% endif %} class="w-100">
  <input type="hidden" name="{{attributes.name|default('')}}" value="[]">
  <div class="input-group m-0">
    <select class="form-select" id="ActorTypeSelector_{{rand}}">
      {% if attributes.actorTypes %}
        {% for name, value in attributes.actorTypes %}
          <option value="{{value}}">{{name|raw}}
        {% endfor %}
      {% endif %}
    </select>
    <select class="form-select" id="ActorSelector_{{rand}}">
    </select>
    <button class="btn btn-sm btn-outline-success" type="button" onClick="addActor{{rand}}()"><i class="fas fa-plus"></i></button>
  </div>
  <table id="ActorTable_{{rand}}" class="w-100 fs-6 table table-sm table-hover align-middle text-center">
    <tbody>
      {% for actor in attributes.values %}
          <tr data-id="{{actor.id}}" data-type="{{actor.type}}">
            <td>
              <i class="{{ actor.icon|raw }}"></i>
            </td>
            <td> {{actor.name|raw}} </td>
            <td class="d-flex flex-row-reverse">
              <button type="button" class="btn btn-sm btn-outline-danger" onClick="removeActor{{rand}}('{{actor.type}}', '{{actor.id}}')"><i class="fas fa-times"></i></button>
            </td>
          </tr>
      {% endfor %}
    </tbody>
  </table>
</div>
<script>

function removeActor{{rand}}(type,id) {
  const JsonSelection = $('input[name="{{attributes.name|default('')}}"]').val();
  const selection = JSON.parse(JsonSelection);
  const newSelection = selection.filter((item) => item.type != type || item.id != id);
  $('input[name="{{attributes.name|default('')}}"]').val(JSON.stringify(newSelection));
  // remove the row from the table
  $(`#ActorTable_{{rand}} tr[data-id='${id}'][data-type='${type}']`).remove();
}

function addActor{{rand}}() {
  const icons = { user: 'fas fa-user', group: 'fas fa-users', supplier: 'fas fa-dolly' }
  const actorType = $("#ActorTypeSelector_{{rand}}").val();
  const actorName = $("#ActorSelector_{{rand}}").val();
  const JsonSelection = $('input[name="{{attributes.name|default('')}}"]').val();
  const selection = JSON.parse(JsonSelection);
  const newSelection = [...selection, {type: actorType, id: actorName}];
  $('input[name="{{attributes.name|default('')}}"]').val(JSON.stringify(newSelection));
  // add the row to the table
  const actorNameText = $("#ActorSelector_{{rand}} option:selected").text();
  const newRow = `<tr data-id="${actorName}" data-type="${actorType}">
    <td>
      <i class="${icons[actorType]}"></i>
    </td>
    <td> ${actorNameText} </td>
    <td class="d-flex flex-row-reverse">
      <button type="button" class="btn btn-sm btn-outline-danger" onClick="removeActor{{rand}}('${actorType}', '${actorName}')"><i class="fas fa-times"></i></button>
    </td>`;
  $(`#ActorTable_{{rand}} tbody`).append(newRow);
}

function setActorSelectValues{{rand}}() {
  $.ajax({
    url: "{{root_doc}}/ajax/dropdownItilActors.php",
    type: "POST",
    data: {
      type: $("#ActorTypeSelector_{{rand}}").val(),
      actortype: '{{attributes.actorType}}',
      itemtype: '{{attributes.itemType}}',
    },
    success: function (data) {
      jsonData = JSON.parse(data);
      $("#ActorSelector_{{rand}}").empty();
      for (const key in jsonData) {
        $("#ActorSelector_{{rand}}").append(
          $("<option>", {
            value: key,
            text: jsonData[key],
          })
        );
      }
    },
  });
}
$(document).ready(() => {
  setActorSelectValues{{rand}}()
  // add all already present actors
  let letJsonSelection = '';
  let selection = '';
  let newSelection = '';
  {% for actor in attributes.values %}
    letJsonSelection = $('input[name="{{attributes.name|default('')}}"]').val();
    selection = JSON.parse(letJsonSelection);
    newSelection = [...selection, {type: '{{actor.type}}', id: '{{actor.id}}'}];
    $('input[name="{{attributes.name|default('')}}"]').val(JSON.stringify(newSelection));
  {% endfor %}
})
$("#ActorTypeSelector_{{rand}}").on("change", setActorSelectValues{{rand}})
</script>
{% endmacro %}

{% macro select(attributes) %}
<select class='form-select' {% for name, value in attributes %} {% if name != 'values'%}{{name}}="{{value}}"{% endif %} {% endfor %}>
    {% for key, item in attributes.values %}
        <option value="{{key}}" {% if attributes.value == key %}selected="selected"{% endif %}>{{item}}</option>
    {% endfor %}
</select>
{% if attributes.searchable %}
<script>
    $(document).ready(function() {
        var select_box_element = document.querySelector('#{{attributes.id}}');
        dselect(select_box_element, {
          search: true
        });
    });
</script>
{% endif %}
{% endmacro %}

{% macro file(attributes, root_doc) %}
<input class='form-control h-100' {% for name, value in attributes %} {{name}}="{{value}}" {% endfor %}/>
<script>
$('#{{attributes.id}}').on('change', function() {
    let formData = new FormData();
    formData.append('name', 'filename');
    formData.append('showFileSize', $('#{{attributes.id}}').prop('files').length);
    for (let i = 0; i < $('#{{attributes.id}}').prop('files').length; i++) {
        formData.append(i, $('#{{attributes.id}}').prop('files')[i]);
    }
    $.ajax({
    url: '{{root_doc}}' + '/ajax/fileupload.php',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function(data) {
        // add an hidden input containing the data for all files
            if ($('#hiddenInputForFiles').length == 0) {
                $('#{{attributes.id}}').after('<input type="hidden" id="hiddenInputForFiles" name="files" value="">');
            }
            $('#hiddenInputForFiles').val(data);
        }
    });    
})
</script>
{% endmacro %}

{% macro richtextarea(attributes) %}
<link rel="stylesheet" href="/~antoine/itsm-ng2.0/node_modules/trumbowyg/dist/ui/trumbowyg.min.css">
<textarea {% for name, value in attributes|filter((v, k) => k != 'value')  %} {{name}}="{{value}}" {% endfor %}>{{attributes.value|default('')|raw}}</textarea>
<script src="/~antoine/itsm-ng2.0/node_modules/trumbowyg/dist/trumbowyg.min.js"></script>
<script>
$('textarea[name="{{attributes.name}}"]').trumbowyg({
  btns: [
    ['viewHTML'],
    ['undo', 'redo'],
    ['formatting'],
    ['strong', 'em'],
    ['link'],
    ['insertImage'],
    ['unorderedList', 'orderedList'],
    ['horizontalRule'],
    ['removeformat'],
  ]
});
</script>
{% endmacro %}

{% macro datetime(attributes) %}
    <input class='form-control' {% for name, value in attributes %} {{name}}="{{value}}" {% endfor %}/>
    <input type="hidden" name="{{attributes.name}}" value="{{attributes.value|default("")|raw}}" />
    <script>
    $('#{{attributes.id}}').on('change', function() {
        $('input[name="{{attributes.name}}"]').val($('#{{attributes.id}}').val().replace('T', ' '))
    })
    </script>
{% endmacro %}

{% macro input(attributes, root_doc = '') %}
    {% if attributes.type == 'checkbox' %}
<div class="form-switch">
    <input type="hidden" name="{{attributes.name}}" value="0">
    <input class='form-check-input' role="switch"
        {% for name, value in attributes|filter((v, k) => k != 'value')  %} {{name}}="{{value}}" {% endfor %} value="1"
        {% if attributes.value == 1 %} checked {% endif %}/>
</div>
    {% elseif attributes.type == 'textarea' %}
<textarea class='form-control' {% for name, value in attributes|filter(k,v => k != 'value') %} {{name}}="{{value}}" {% endfor %}>{{attributes.value|default("")|raw}}</textarea>
    {% elseif attributes.type == 'richtextarea' %}
{{_self.richtextarea(attributes)}}
    {% elseif attributes.type == 'select' %}
{{_self.select(attributes)}}
    {% elseif attributes.type == 'actorSelect' %}
{{_self.actorSelect(attributes, root_doc)}}
    {% elseif attributes.type == 'multiSelect' %}
{{_self.multiSelect(attributes, root_doc)}}
    {% elseif attributes.type == 'twig' %}
{% include attributes.template with attributes only %}
    {% elseif attributes.type == 'file' %}
{{_self.file(attributes, root_doc)}}
    {% elseif attributes.type == 'datetime-local' %}
{{_self.datetime(attributes)}}
    {% else %}
<input class='form-control' {% for name, value in attributes %} {{name}}="{{value}}" {% endfor %}/>
    {% endif %}
{% endmacro %}

{{_self.input(_context)}}
