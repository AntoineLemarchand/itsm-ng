{% macro multiselect(attributes) %}
  {% set rand=random() %}
  <div
    {% if attributes.id %} id="{{attributes.id}}" {% endif %}
    {% if attributes.style %} style="{{attributes.style}}" {% endif %}
    class="w-100 d-flex flex-column align-items-center">
    <div class="input-group m-0">
      {% for input in attributes.inputs %}
        {% include 'macros/input.twig' with input only %}
      {% endfor %}
      <button type="button"
        class="btn btn-sm btn-outline-success"
        aria-label="Add Option"
        onClick="addOption{{rand}}({{attributes.getInputAdd}}())">
          <i class="fas fa-plus"></i>
      </button>
    </div>
    <table id="OptionTable_{{rand}}" class="w-100 fs-6 table table-sm table-hover align-middle text-center">
      <tbody>
        {% for inputs in attributes.values %}
            <tr data-value="{{loop.index}}" style="display: flex" id="{{rand}}{{loop.index}}">
              <td class="d-flex align-items-center w-100">
                {% for name, value in inputs|filter((v, k) => k != 'id') %}
                  {% if name and value.value is not defined %}
                    <input type="hidden" name="{{name}}[{{inputs.id}}]" value="{{value}}"/>
                  {% elseif name %}
                    <input type="hidden" name="{{name}}[{{inputs.id}}]" value="{{value.value}}"/>
                  {% endif %}
                {% endfor %}
                {% for name, value in inputs|filter((v, k) => k != 'id') %}
                  {% if value.title is not defined %}
                    {{value|raw}}
                  {% elseif name %}
                    {{value.title|raw}}
                  {% endif %}
                {% endfor %}
              </td>
              <td class="d-flex">
                <button type="button" class="btn btn-sm btn-outline-danger" aria-label="Remove Option" onclick="removeOption{{rand}}('{{loop.index}}')"><i class="fas fa-times"></i></button>
              </td>
            </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
  <script>
  let current{{rand}} = -2;
  function removeOption{{rand}}(value) {
    {% if attributes.isList %}
      $(`#{{rand}}${value}`).remove();
    {% else %}
      $(`#{{rand}}${value} input[type='hidden']`).val('0');
      $(`#{{rand}}${value}`).hide();
    {% endif %}
  }

  function addOption{{rand}}(content) {
    if (!content) {
      return;
    }
    let row = $('<tr>', {'data-value': current{{rand}}, style: "display: flex", id: `{{rand}}${current{{rand}}}`})
      .append($('<td>',  {class: 'd-flex align-items-center w-100'}));
    const inputCell = row.find('td');
    for (const [name, value] of Object.entries(content.values)) {
      inputCell.append($('<input>', {type: 'hidden', name: name + '[' {% if attributes.isList is not defined %} + current{{rand}} {% endif %} + ']', value}));
    }
    inputCell.append(content.title);
    row.append($('<td>', {class: 'd-flex align-items-center'})
      .append($('<button>', {
        type: 'button',
        class: 'btn btn-sm btn-outline-danger',
        onClick: `removeOption{{rand}}('${current{{rand}}}')`
      })
      .append($('<i>', {class: 'fas fa-times'}))));
    $('#OptionTable_{{rand}} tbody').append(row);
    current{{rand}}--;
    if (grid) {
      grid.resizeToContent($('#ContentForTabs > div').first()[0]);
    }
  }
  </script>
{% endmacro %}
{{ _self.multiselect(attributes) }}
